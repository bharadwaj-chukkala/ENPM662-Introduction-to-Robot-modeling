# -*- coding: utf-8 -*-
"""Sympy.ipynb
Automatically generated by Colaboratory.
Original file is located at
https://colab.research.google.com/drive/1EYMkwmshXScTIqqfJHG-9ETh_3jk08hG
## ***Installing Simpy***
"""
#!pip install simpy
"""## Tranformation ***Matrices*** of KUKA Robot"""
import sympy as sym
sym.init_printing()
from sympy import *
theta1, theta2, theta3, theta4, theta5, theta6, theta7 = sym.symbols("theta_1, theta_2, theta_3, theta_4, theta_5, theta_6, theta_7")
d1, d3, d5, d7 = sym.symbols("d_1,d_3,d_5,d_7")
A1 = sym.Matrix([[sym.cos(theta1), -sym.sin(theta1), 0, 0], [sym.sin(theta1),
sym.cos(theta1), 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]])
A1
A2 = sym.Matrix([[sym.cos(theta2), 0, sym.sin(theta2), 0], [sym.sin(theta2), 0, -
sym.cos(theta2), 0], [0, 1, 0, d1], [0, 0, 0, 1]])
A2
A3 = sym.Matrix([[sym.cos(theta3), 0, -sym.sin(theta3), 0], [sym.sin(theta3), 0,
sym.cos(theta3), 0], [0, -1, 0, 0], [0, 0, 0, 1]])
A3
A4 = sym.Matrix([[sym.cos(theta4), 0, -sym.sin(theta4), 0], [sym.sin(theta4), 0,
sym.cos(theta3), 0], [0, -1, 0, d3], [0, 0, 0, 1]])
A4
A5 = sym.Matrix([[sym.cos(theta5), 0, sym.sin(theta5), 0], [sym.sin(theta5), 0, -
sym.cos(theta5), 0], [0, 1, 0, 0], [0, 0, 0, 1]])
A5
A6 = sym.Matrix([[sym.cos(theta6), 0, sym.sin(theta6), 0], [sym.sin(theta6), 0, -
sym.cos(theta6), 0], [0, 1, 0, d5], [0, 0, 0, 1]])
A6
A7 = sym.Matrix([[sym.cos(theta7), 0, -sym.sin(theta7), 0], [sym.sin(theta7), 0,
sym.cos(theta7), 0], [0, -1, 0, d7], [0, 0, 0, 1]])
A7
A = A1*A2*A3*A4*A5*A6*A7
A
"""## ***Validation for 5 Known Configurations***"""
X1 = N(A.subs(theta1, sym.degree(90)))
X2 = N(X1.subs(theta2, sym.degree(90)))
X3 = N(X2.subs(theta3, sym.degree(90)))
X4 = N(X3.subs(theta4, sym.degree(90)))
X5 = N(X4.subs(theta5, sym.degree(90)))
X6 = N(X5.subs(theta6, sym.degree(90)))
X7 = N(X6.subs(theta7, sym.degree(90)))
X7
X1 = N(A.subs(theta1, sym.degree(0)))
X2 = N(X1.subs(theta2, sym.degree(0)))
X3 = N(X2.subs(theta3, sym.degree(0)))
X4 = N(X3.subs(theta4, sym.degree(0)))
X5 = N(X4.subs(theta5, sym.degree(0)))
X6 = N(X5.subs(theta6, sym.degree(0)))
X7 = N(X6.subs(theta7, sym.degree(0)))
X7
X1 = N(A.subs(theta1, sym.degree(0)))
X2 = N(X1.subs(theta2, sym.degree(90)))
X3 = N(X2.subs(theta3, sym.degree(0)))
X4 = N(X3.subs(theta4, sym.degree(90)))
X5 = N(X4.subs(theta5, sym.degree(0)))
X6 = N(X5.subs(theta6, sym.degree(90)))
X7 = N(X6.subs(theta7, sym.degree(0)))
X7
X1 = N(A.subs(theta1, sym.degree(0)))
X2 = N(X1.subs(theta2, sym.degree(30)))
X3 = N(X2.subs(theta3, sym.degree(45)))
X4 = N(X3.subs(theta4, sym.degree(60)))
X5 = N(X4.subs(theta5, sym.degree(90)))
X6 = N(X5.subs(theta6, sym.degree(45)))
X7 = N(X6.subs(theta7, sym.degree(0)))
X7
X1 = N(A.subs(theta1, sym.degree(0)))
X2 = N(X1.subs(theta2, sym.degree(0)))
X3 = N(X2.subs(theta3, sym.degree(90)))
X4 = N(X3.subs(theta4, sym.degree(90)))
X5 = N(X4.subs(theta5, sym.degree(90)))
X6 = N(X5.subs(theta6, sym.degree(0)))
X7 = N(X6.subs(theta7, sym.degree(0)))
X7